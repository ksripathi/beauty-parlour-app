name: Pylint

on: [push]
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt-get install libmysqlclient-dev
        pip install pylint flask flask-mysqldb
    - name: Analysing the code with pylint
      run: |
        cd backend
        pylint `ls -R|grep .py$|xargs`
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    needs: ci
    steps:
      # https://github.com/actions/checkout/releases
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/hashicorp/setup-terraform/releases
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # TODO: how do we maintain different terraform versions per workspace/folder requirement
          terraform_version: 0.13.5

      # https://github.com/lablabs/setup-tflint
      # https://github.com/terraform-linters/tflint/releases
      - name: Setup TFLint
        run: |
          curl https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - name: Terraform Format
        id: fmt
        run: |
          cd deployements
          terraform fmt -check -diff -recursive

      - name: Terraform Lint
        id: lint
        run: |
          pwd
          tflint
  kind:
    runs-on: ubuntu-latest
    needs: [ci, terraform]
    steps:
      - uses: actions/checkout@master
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.9.0"
      - name: Testing
        run: |
          cd backend
          docker build . -t beauty-parlour-app
          docker tag beauty-parlour-app:latest beauty-parlour-app:latest
          kind load docker-image beauty-parlour-app beauty-parlour-app:latest
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          kubectl apply -f deployment.yaml
          sleep 5
          kubectl get pods --all-namespaces
          
